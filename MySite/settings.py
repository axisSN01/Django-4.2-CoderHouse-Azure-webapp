"""
Django settings for Proyecto1 project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os
import socket


try:
    import secrets_file
    SECRET_KEY = secrets_file.SECRET_KEY
    ACCOUNT_KEY = secrets_file.ACCOUNT_KEY

except ImportError:
    print("\n\nSecrets not found in file, so read from ENV\n\n")
    SECRET_KEY = os.environ.get('SECRET_KEY')
    ACCOUNT_KEY = os.environ.get('ACCOUNT_KEY')

# Get the hostname of the machine
hostname = socket.gethostname()

# Get the IP address corresponding to the hostname
LOCAL_IP = socket.gethostbyname(hostname)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/



# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

LOCAL_HOST = ["https://127.0.0.1:8501", "http://localhost:8501", "http://"+LOCAL_IP]

print("local IP: ", LOCAL_IP)

# that Azure automatically creates for us.
ALLOWED_HOSTS = [os.environ['WEBSITE_HOSTNAME']] if 'WEBSITE_HOSTNAME' in os.environ else ["*",]
CSRF_TRUSTED_ORIGINS = ['https://' + os.environ['WEBSITE_HOSTNAME']] if 'WEBSITE_HOSTNAME' in os.environ else []

# Application definition

INSTALLED_APPS = [
    #"whitenoise.runserver_nostatic",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles', # es gestionado por storages, pero lo necesito activo para correr COLLECSTATIC hacia AZURE.
    'storages',
    "MyApp",
    'avatar',
    'pwa',
    # Pero no lo puedo dejar activo a 'django.contrib.staticfiles' por cambia la ruta de static ( le agrega un static a STATIC_URL).
]




DEFAULT_FILE_STORAGE = 'azure_media.AzureMediaStorage'
STATICFILES_STORAGE = 'azure_media.AzureStaticStorage'

STATIC_LOCATION = "static"
MEDIA_LOCATION = "media"

AZURE_ACCOUNT_NAME = "stacticmedia"
AZURE_CUSTOM_DOMAIN = f'{AZURE_ACCOUNT_NAME}.blob.core.windows.net'
STATIC_URL = f'https://{AZURE_CUSTOM_DOMAIN}/{STATIC_LOCATION}/'
MEDIA_URL = f'https://{AZURE_CUSTOM_DOMAIN}/{MEDIA_LOCATION}/'



LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} - {asctime} - m:{module} Ps:{process:d} Th:{thread:d}    {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'django.log',
            'formatter': 'verbose',
            },
    },
    'loggers': {
        'django': {
            'handlers': ['console'] if DEBUG else ['console', 'file'],
            'level': 'INFO' if DEBUG else 'INFO',
        },
        'MyApp': {
            'handlers': ['console'] if DEBUG else ['console', 'file'],
            'level': 'DEBUG',
        },
         'avatar': {
            'handlers': ['console'] if DEBUG else ['console', 'file'],
            'level': 'DEBUG',
        }, 
         'storages': {
            'handlers': ['console'] if DEBUG else ['console', 'file'],
            'level': 'DEBUG',
        },         
    },
}

####################################
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',                         
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


######################################

ROOT_URLCONF = 'MySite.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

print("template DIRS: ", BASE_DIR/'templates')

WSGI_APPLICATION = 'MySite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, "db.sqlite3"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'es'    

TIME_ZONE = 'America/Argentina/Buenos_Aires'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

# STATICFILES_DIRS = (str(BASE_DIR.joinpath('static')),)
# print(STATICFILES_DIRS)
# STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# AVATAR APP
AVATAR_PROVIDERS = (
    # NOTA importante, aca importa el orden de aparicion. ya quwe si esta primero Default, te asigna default aunque el perfil tenga otro avatar 
    'avatar.providers.PrimaryAvatarProvider', 
    'avatar.providers.DefaultAvatarProvider',
    # 'avatar.providers.LibRAvatarProvider',
    # 'avatar.providers.GravatarAvatarProvider',
)

# Ojo aca, todo es Key sensitive, MyApp no es lo mismo que myApp
AVATAR_DEFAULT_URL = '/MyApp/default_avatar/default.jpg'

print("AVATAR_DEFAULT_URL: ", AVATAR_DEFAULT_URL)


####################### DJANGO PWA #####################################################
# project/settings.py

PWA_APP_NAME = 'My App'
PWA_APP_DESCRIPTION = "My app description"
PWA_APP_THEME_COLOR = '#0A0302'
PWA_APP_BACKGROUND_COLOR = '#ffffff'
PWA_APP_DISPLAY = 'standalone'
PWA_APP_SCOPE = "/"
PWA_APP_ORIENTATION = 'any'
PWA_APP_START_URL = "/"
PWA_APP_STATUS_BAR_COLOR = 'default'
PWA_APP_ICONS = [
    {
        'src': 'https://stacticmedia.blob.core.windows.net/static/images/my_app_icon.png',
        'sizes': '512x512'
    }
]
PWA_APP_ICONS_APPLE = [
    {
        'src': 'https://stacticmedia.blob.core.windows.net/static/images/my_app_icon.png',
        'sizes': '512x512'
    }
]
PWA_APP_SPLASH_SCREEN = [
    {
        'src': '/static/images/icons/splash-640x1136.png',
        'media': '(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)'
    }
]
PWA_APP_DIR = 'ltr'
PWA_APP_LANG = 'en-US'
##################################################################################

######################## OPEN TELEMERY ######################################################
#########################################################################################